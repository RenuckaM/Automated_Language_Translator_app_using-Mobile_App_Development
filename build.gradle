package com.programmerworld.translatorapp;

import android.os.Bundle;
import android.support.v7.app.AppCompatActivity;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import com.google.cloud.translate.Translate;
import com.google.cloud.translate.TranslateOptions;
import com.google.cloud.translate.Translation;

public class MainActivity extends AppCompatActivity {
private EditText editText;
private TextView textView;
private Translator translatorGerman;
private Translator translatorArabic;
private Translator translatorKorean;
private Translator translatorTamil;
private Translator translatorHindi;
private Translator translatorMalayalam;
private Translator translatorTelungu;

private Boolean booleanGerman = false;
private Boolean booleanArabic = false;
private Boolean booleanKorean = false;
private Boolean booleanTamil = false;
private Boolean booleanHindi = false;
private Boolean booleanMalayalam = false;
private Boolean booleanTelungu = false;

@Override

protected void onCreate(Bundle savedInstanceState) {
super.onCreate(savedInstanceState);
setContentView(R.layout.activity_main);
editText = findViewById(R.id.editText);
textView = findViewById(R.id.textView);
Button button = findViewById(R.id.button);

TranslatorOptions translatorOptionsGerman = new TranslatorOptions.Builder()
.setSourceLanguage(TranslateLanguage.ENGLISH)
.setTargetLanguage(TranslateLanguage.GERMAN)
.build();

TranslatorOptions translatorOptionsArabic = new TranslatorOptions.Builder()
.setSourceLanguage(TranslateLanguage.ENGLISH)
.setTargetLanguage(TranslateLanguage.ARABIC)
.build();

TranslatorOptions translatorOptionsKorean = new TranslatorOptions.Builder()
.setSourceLanguage(TranslateLanguage.ENGLISH)
.setTargetLanguage(TranslateLanguage.KOREAN)
.build();

TranslatorOptions translatorOptionsTamil = new TranslatorOptions.Builder()
.setSourceLanguage(TranslateLanguage.ENGLISH)
.setTargetLanguage(TranslateLanguage.TAMIL)
.build();

TranslatorOptions translatorOptionsHindi = new TranslatorOptions.Builder()
.setSourceLanguage(TranslateLanguage.ENGLISH)
.setTargetLanguage(TranslateLanguage.HINDI)
.build();

TranslatorOptions translatorOptionsMalayalam = new TranslatorOptions.Builder()
.setSourceLanguage(TranslateLanguage.ENGLISH)
.setTargetLanguage(TranslateLanguage.MALAYALAM)
.build();

TranslatorOptions translatorOptionsTelungu = new TranslatorOptions.Builder()
.setSourceLanguage(TranslateLanguage.ENGLISH)
.setTargetLanguage(TranslateLanguage.TELUNGU)
.build();

translator German = Translation.getClient(translatorOptionsGerman);
translator Arabic = Translation.getClient(translatorOptionsArabic);
translator Korean = Translation.getClient(translatorOptionsKorean);
translator Tamil = Translation.getClient(translatorOptionsTamil);
translator Hindi = Translation.getClient(translatorOptionsHindi);
translator Malayalam = Translation.getClient(translatorOptionsMalayalam);
translator Telungu = Translation.getClient(translatorOptionsTelungu);

private void downloadModel(){
DownloadConditions downloadConditions = new DownloadConditions.Builder()
.requireWifi()
.build();
translatorGerman.downloadModelIfNeeded(downloadConditions)
.addOnSuccessListener(new OnSuccessListener<Void>() {

@Overrid
public void onSuccess(Void unused) {
booleanGerman = true;
}
})
.addOnFailureListener(new OnFailureListener() {

@Override
public void onFailure(@NonNull Exception e) {
booleanGerman = false;
}
});
translatorArabic.downloadModelIfNeeded(downloadConditions)
.addOnSuccessListener(new OnSuccessListener<Void>() {

@Override
public void onSuccess(Void unused) {
booleanArabic = true;
}
})
.addOnFailureListener(new OnFailureListener() {

@Override
public void onFailure(@NonNull Exception e) {
booleanArabic = false;
}
});
translatorKorean.downloadModelIfNeeded(downloadConditions)
.addOnSuccessListener(new OnSuccessListener<Void>() {

@Override
public void onSuccess(Void unused) {
booleanKorean = true;
}
})
.addOnFailureListener(new OnFailureListener() {

@Override
public void onFailure(@NonNull Exception e) {
booleanKorean = false;
}
});
translatorTamil.downloadModelIfNeeded(downloadConditions)
.addOnSuccessListener(new OnSuccessListener<Void>() {

@Override
public void onSuccess(Void unused) {
booleanTamil = true;
}
})
.addOnFailureListener(new OnFailureListener() {
@Override
public void onFailure(@NonNull Exception e) {
booleanTamil = false;
}
});
translatorHindi.downloadModelIfNeeded(downloadConditions)
.addOnSuccessListener(new OnSuccessListener<Void>() {

@Override
public void onSuccess(Void unused) {
booleanHindi = true;
}
})
.addOnFailureListener(new OnFailureListener() {

@Override
public void onFailure(@NonNull Exception e) {
booleanHindi = false;
}
});
translatorMalayalam.downloadModelIfNeeded(downloadConditions)
.addOnSuccessListener(new OnSuccessListener<Void>() {

@Override
public void onSuccess(Void unused) {
booleanMalayalam = true;
}
})
.addOnFailureListener(new OnFailureListener() {

@Override
public void onFailure(@NonNull Exception e) {
booleanMalayalam = false;
}
});
translatorTelungu.downloadModelIfNeeded(downloadConditions)
.addOnSuccessListener(new OnSuccessListener<Void>() {

@Override
public void onSuccess(Void unused) {
booleanTelungu = true;
}
})
.addOnFailureListener(new OnFailureListener() {

@Override
public void onFailure(@NonNull Exception e) {
booleanTelungu = false;
}
});
}

private void buttonDownloadModel(View view){
downloadModel();
}

private void buttonGerman(View view){
if(buttonGerman){
translateGerman.translate(editText.getText().toString())
.addOnSuccessListener(new OnSuccessListener<String>(){

@Override
public void onSuccess(String s){
textView.setText(s);
} })
.addOnFailureListener(new OnFailureListener(){

@Override
public void onFailure(@NonNull Exception e){
textView.setText(e.toString());
}
}); 
}

private void buttonArabic(View view){
if(buttonGerman){
translateArabic.translate(editText.getText().toString())
.addOnSuccessListener(new OnSuccessListener<String>(){

@Override
public void onSuccess(String s){
textView.setText(s);
}
})
.addOnFailureListener(new OnFailureListener(){

@Override
public void onFailure(@NonNull Exception e){
textView.setText(e.toString());
}
});
}

private void buttonKorean(View view){
if(buttonGerman){
translateKorean.translate(editText.getText().toString())
.addOnSuccessListener(new OnSuccessListener<String>(){

@Override
public void onSuccess(String s){
textView.setText(s);
}
})
.addOnFailureListener(new OnFailureListener(){

@Override
public void onFailure(@NonNull Exception e){
textView.setText(e.toString());
}
});
}

private void buttonTamil(View view){
if(buttonGerman){
translateTamil.translate(editText.getText().toString())
.addOnSuccessListener(new OnSuccessListener<String>(){

@Override
public void onSuccess(String s){
textView.setText(s);
}
})
.addOnFailureListener(new OnFailureListener(){

@Override
public void onFailure(@NonNull Exception e){
textView.setText(e.toString());
}
});
}

private void buttonHindi(View view){
if(buttonGerman){
translateHindi.translate(editText.getText().toString())
.addOnSuccessListener(new OnSuccessListener<String>(){

@Override
public void onSuccess(String s){
textView.setText(s);
}
})
.addOnFailureListener(new OnFailureListener(){

@Override
public void onFailure(@NonNull Exception e){
textView.setText(e.toString());
}
});
}

private void buttonMalayalam(View view){
if(buttonGerman){
translateMalayalam.translate(editText.getText().toString())
.addOnSuccessListener(new OnSuccessListener<String>(){

@Override
public void onSuccess(String s){
textView.setText(s);
}
})
.addOnFailureListener(new OnFailureListener(){

@Override
public void onFailure(@NonNull Exception e){
textView.setText(e.toString());
}
});
}

private void buttonTelungu(View view){
if(buttonGerman){
translateTelungu.translate(editText.getText().toString())
.addOnSuccessListener(new OnSuccessListener<String>(){

@Override
public void onSuccess(String s){
textView.setText(s);
}
})
.addOnFailureListener(new OnFailureListener(){

@Override
public void onFailure(@NonNull Exception e){
textView.setText(e.toString());
}
});
}
}